import axios from "axios";

const main = document.querySelector('main');

const newCharacter = {      // get the value of the input
  description: 'This is a description',
  shortDescription: 'This is a short description',  
  name: 'Name'
}

const updateNewCharacter = {
  description: 'This is a description',
  shortDescription: 'This is a short description',  
  name: 'Name',
  image: ``
}


async function getCharacter() {
  try {

    // GET method

    let res = await axios.get('https://character-database.becode.xyz/characters/');
    let datas = res.data;
    console.log(datas);

    // loop through all the datas 

    datas.forEach(data => {

      // create the elements 

      const div = document.createElement('div');
      const heading = document.createElement('h2');
      const subHeading = document.createElement('h3');
      const description = document.createElement('p');
      const image = document.createElement('img');
      const btnSeeMore = document.createElement('button');

      // set the styles

      div.setAttribute('class', 'flex flex-col p-5 mb-4 bg-slate-200 w-80 rounded-lg h-[550px] shadow-xl relative');
      heading.setAttribute('class','text-center pt-5 pb-2');
      subHeading.setAttribute('class', 'text-center py-2');
      description.setAttribute('class', 'text-left py-2 h-[250px] overflow-hidden');
      btnSeeMore.setAttribute('class', 'bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded-full')
      image.setAttribute('src', `data:image/gif;base64, ${data.image}`);      // transform the URI in img 
      image.setAttribute('class', 'shadow-xl mx-auto rounded-md');
      image.setAttribute('width', '125');

      // button see more

      btnSeeMore.textContent = 'See more'
      btnSeeMore.addEventListener('click', () => {
        document.location.href = `https://character-database.becode.xyz/characters/${data.id}`;
      })

      // put the data in the tag

      heading.textContent = data.name;
      subHeading.textContent = data.shortDescription;
      description.textContent = data.description;
      main.append(div);
      div.append(image, heading, subHeading, description, btnSeeMore);

      console.log(data.id);
    })
  
  } catch (err) {
    console.log(err)
  }
}

getCharacter();

//    function to add a character

// async function addCharacter() {
//   try {
// let res = await axios.post('https://character-database.becode.xyz/characters', newCharacter)
//     console.log(res.data);
//   } catch(err) {
//     console.log(err)
//   }
// }

// addCharacter()   


//    function to edit a character

// async function updateCharacter() {
//   try {
// let res = await axios.put('https://character-database.becode.xyz/characters/eb4d61c9-4e65-476d-a65e-dbcc6fa1a6d5', updateNewCharacter)   //    add the id
//     console.log(res.data); // we can redirect to the index page
//   } catch(err) {
//     console.log(err)
//   }
// }

// updateCharacter()


//    function to delete a character

// async function updateCharacter() {
//   try {
// let res = await axios.put('https://character-database.becode.xyz/characters/eb4d61c9-4e65-476d-a65e-dbcc6fa1a6d5')
//     console.log(res.data); // we can redirect to the index page
//   } catch(err) {
//     console.log(err)
//   }
// }